---
name: Build Kernel Package

# yamllint disable-line rule:truthy
on:
  [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repo'
        uses: actions/checkout@v2
      - name: 'Set up Python 3.9'
        uses: actions/setup-python@v2
      - name: 'Install dependencies'
        run: |
          python -m pip install --upgrade pip
          pip install yamllint
          sudo apt-get install shellcheck bash
      - name: 'Analysing the code'
        run: |
          yamllint .
          shellcheck ./*.sh
  build:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repo'
        uses: actions/checkout@v2

      - name: Build script
        id: build
        run: |
          mkdir -p /tmp/artifacts
          VERSION=$(grep ^KERNEL_VERSION build.sh | head -n1| cut -d = -f2)
          REL=$(grep "PKGREL=\d*" build.sh | cut -d = -f2)
          #REL=$( git tag |grep -F $VERSION|sort -r|head -n1|tr -d v)
          echo Building $VERSION-$REL
          echo "::set-output name=tag::${VERSION}-${REL}"

          DOCKER_IMAGE=debian:unstable
          docker pull ${DOCKER_IMAGE}
          docker run \
          -t \
          -v "$(pwd)":/repo -v  /tmp/artifacts:/tmp/artifacts \
          ${DOCKER_IMAGE} \
          /bin/bash -c 'cd /repo && ./build.sh'

          cd /tmp/artifacts
          dpkg-scanpackages . /dev/null | gzip -9c > Packages.gz

      - name: Upload package artifact
        uses: actions/upload-artifact@v2
        with:
          name: linux-T2-${{ steps.build.outputs.tag }}
          path: /tmp/artifacts/*

      - name: Release
        if: github.ref == 'refs/heads/Mainline'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            /tmp/artifacts/Packages.gz
            /tmp/artifacts/sha256
            /tmp/artifacts/*.deb
          tag_name: v${{ steps.build.outputs.tag }}
          body_path: ${{ github.workspace }}/.github/workflows/instructions.txt
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
