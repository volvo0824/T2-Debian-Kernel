From aefa1fbeb0b3d0b5a0a2f69f57c081926a876a8f Mon Sep 17 00:00:00 2001
From: Aditya Garg <85610623+AdityaGarg8@users.noreply.github.com>
Date: Sat, 19 Mar 2022 14:31:18 +0530
Subject: [PATCH] Force enable intel iommu on T2 Macs

---
 drivers/iommu/intel/iommu.c | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/drivers/iommu/intel/iommu.c b/drivers/iommu/intel/iommu.c
index 5b196cfe9..49a9b2eb3 100644
--- a/drivers/iommu/intel/iommu.c
+++ b/drivers/iommu/intel/iommu.c
@@ -24,6 +24,7 @@
 #include <linux/pci.h>
 #include <linux/dmar.h>
 #include <linux/dma-map-ops.h>
+#include <linux/dmi.h>
 #include <linux/mempool.h>
 #include <linux/memory.h>
 #include <linux/cpu.h>
@@ -405,8 +406,25 @@ static void init_translation_status(struct intel_iommu *iommu)
 		iommu->flags |= VTD_FLAG_TRANS_PRE_ENABLED;
 }
 
+static const struct dmi_system_id apple_force_iommu_quirk[] = {
+	{
+		.matches = {
+			DMI_MATCH(DMI_BIOS_VERSION, "(iBridge:"),
+		},
+	},
+	{ }
+};
+
 static int __init intel_iommu_setup(char *str)
 {
+	const struct dmi_system_id *dmi_id;
+
+	dmi_id = dmi_first_match(apple_force_iommu_quirk);
+	if (dmi_id) {
+		dmar_disabled = 0;
+		pr_info("T2 Mac detected. IOMMU force enabled\n");
+	}
+
 	if (!str)
 		return -EINVAL;
 
-- 
2.25.1

